/**
 * Warning: Generated code! do not change!
 * Generated by: go/EntityDB.ftl
 */
package tables
import (
	"github.com/quintans/goSQL/db"
	"github.com/quintans/taskboard/go/entity"
	. "github.com/quintans/toolkit/ext"
)

var (
	ROLE = db.TABLE("ROLE")
	ROLE_C_ID = ROLE.KEY("ID")
	ROLE_C_VERSION = ROLE.VERSION("VERSION")
	// Audit
	ROLE_C_CREATION = ROLE.COLUMN("CREATION")
	ROLE_C_MODIFICATION = ROLE.COLUMN("MODIFICATION")
	ROLE_C_USER_CREATION = ROLE.COLUMN("USER_CREATION").As("UserCreationId")
	ROLE_C_USER_MODIFICATION = ROLE.COLUMN("USER_MODIFICATION").As("UserModificationId")
	// Atributos 
	ROLE_C_KIND = ROLE.COLUMN("KIND")
	ROLE_C_USER_ID = ROLE.COLUMN("USER").As("UserId")
	//FK's
	ROLE_A_USER = ROLE.
				ASSOCIATE(ROLE_C_USER_ID).TO(USER_C_ID).
				As("User")
	ROLE_A_USER_CREATION = ROLE.ASSOCIATE(ROLE_C_USER_CREATION).TO(USER_C_ID).As("UserCreation")
	ROLE_A_USER_MODIFICATION = ROLE.ASSOCIATE(ROLE_C_USER_MODIFICATION).TO(USER_C_ID).As("UserModification")
)

func init() {
	ROLE.PreInsertTrigger = func(ins *db.Insert) {
		ins.Set(ROLE_C_VERSION, 1)
		ins.Set(ROLE_C_CREATION, NOW())
		uid, ok := ins.GetDb().GetAttribute(entity.ATTR_USERID)
		if ok {
			ins.Set(ROLE_C_USER_CREATION, uid.(int64))
		}
	}
	ROLE.PreUpdateTrigger = func(upd *db.Update) {
		upd.Set(ROLE_C_MODIFICATION, NOW())
		uid, ok := upd.GetDb().GetAttribute(entity.ATTR_USERID)
		if ok {
			upd.Set(ROLE_C_USER_MODIFICATION, uid.(int64))
		}
	}
}
