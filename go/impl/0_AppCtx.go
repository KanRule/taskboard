/**
 * Warning: Generated code! do not change!
 * Generated by: go/AppCtx.ftl
 */
package impl

import (
	"net/http"

	"github.com/quintans/goSQL/db"
	"github.com/quintans/taskboard/go/service"
	"github.com/quintans/toolkit/web"
)

func NewAppCtx(
	w http.ResponseWriter,
	r *http.Request,
	taskBoardService service.ITaskBoardService,
) *AppCtx {
	this := new(AppCtx)
	this.Context = new(web.Context)
	this.Init(w, r)
	this.taskBoardService = taskBoardService
	return this
}

type AppCtx struct {
	*web.Context

	Store            db.IDb
	taskBoardService service.ITaskBoardService
}

func (this *AppCtx) AsPrincipal() Principal {
	return this.Principal.(Principal)
}

func (this *AppCtx) GetTaskBoardService() service.ITaskBoardService {
	return this.taskBoardService
}

func (this *AppCtx) BuildJsonRpc(transaction func(ctx web.IContext) error) *web.JsonRpc {
	// JSON-RPC services
	json := web.NewJsonRpc(nil) // json-rpc resgistry

	var svc = json.RegisterAs("taskboard", this.GetTaskBoardService())
	svc.PushFilterFunc("WhoAmI", transaction, authorize("USER"), jsonpProtection)
	svc.PushFilterFunc("FetchBoardUsers", transaction, authorize("USER"), jsonpProtection)
	svc.PushFilterFunc("FetchBoardAllUsers", transaction, authorize("ADMIN"), jsonpProtection)
	svc.PushFilterFunc("FetchBoards", transaction, authorize("USER"), jsonpProtection)
	svc.PushFilterFunc("FetchBoardById", transaction, authorize("USER"), jsonpProtection)
	svc.PushFilterFunc("FullyLoadBoardById", transaction, authorize("USER"), jsonpProtection)
	svc.PushFilterFunc("SaveBoard", transaction, authorize("ADMIN"), jsonpProtection)
	svc.PushFilterFunc("DeleteBoard", transaction, authorize("ADMIN"), jsonpProtection)
	svc.PushFilterFunc("AddLane", transaction, authorize("ADMIN"), jsonpProtection)
	svc.PushFilterFunc("SaveLane", transaction, authorize("ADMIN"), jsonpProtection)
	svc.PushFilterFunc("DeleteLastLane", transaction, authorize("ADMIN"), jsonpProtection)
	svc.PushFilterFunc("SaveUser", transaction, authorize("ADMIN"), jsonpProtection)
	svc.PushFilterFunc("FetchUsers", transaction, authorize("ADMIN"), jsonpProtection)
	svc.PushFilterFunc("DisableUser", transaction, authorize("ADMIN"), jsonpProtection)
	svc.PushFilterFunc("AddUserToBoard", transaction, authorize("ADMIN"), jsonpProtection)
	svc.PushFilterFunc("RemoveUserFromBoard", transaction, authorize("ADMIN"), jsonpProtection)
	svc.PushFilterFunc("SaveUserName", transaction, authorize("USER"), jsonpProtection)
	svc.PushFilterFunc("ChangeUserPassword", transaction, authorize("USER"), jsonpProtection)
	svc.PushFilterFunc("SaveTask", transaction, authorize("USER"), jsonpProtection)
	svc.PushFilterFunc("MoveTask", transaction, authorize("USER"), jsonpProtection)
	svc.PushFilterFunc("FetchNotifications", transaction, authorize("USER"), jsonpProtection)
	svc.PushFilterFunc("SaveNotification", transaction, authorize("USER"), jsonpProtection)
	svc.PushFilterFunc("DeleteNotification", transaction, authorize("USER"), jsonpProtection)
	return json
}

// JSON Vulnerability Protection.
// AngularJS will automatically strip the prefix before processing it as JSON.
func jsonpProtection(ctx web.IContext) error {
	err := ctx.Proceed()
	// this must be written after because cookies might be set (ex: Login)
	if err == nil {
		ctx.GetResponse().Write([]byte(")]}',\n"))
	}
	return err
}

func authorize(roles ...string) func(ctx web.IContext) error {
	return func(ctx web.IContext) error {
		user := ctx.GetPrincipal().(Principal)
		for _, r := range roles {
			for _, role := range user.Roles {
				if r == string(role) {
					if err := ctx.Proceed(); err != nil {
						return err
					}
					return nil
				}
			}
		}
		http.Error(ctx.GetResponse(), "Unauthorized", http.StatusUnauthorized)
		return nil
	}
}
