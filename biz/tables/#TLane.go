/**
 * Warning: Generated code! do not change!
 * Generated by: go/EntityDB.ftl
 */
package tables
import (
	"github.com/quintans/goSQL/db"
	"github.com/quintans/taskboard/common/entity"
	. "github.com/quintans/toolkit/ext"
)

var (
	LANE = db.TABLE("LANE")
	LANE_C_ID = LANE.KEY("ID")
	LANE_C_VERSION = LANE.VERSION("VERSION")
	// Audit
	LANE_C_CREATION = LANE.COLUMN("CREATION")
	LANE_C_MODIFICATION = LANE.COLUMN("MODIFICATION")
	LANE_C_USER_CREATION = LANE.COLUMN("USER_CREATION").As("UserCreationId")
	LANE_C_USER_MODIFICATION = LANE.COLUMN("USER_MODIFICATION").As("UserModificationId")
	// Atributos 
	LANE_C_NAME = LANE.COLUMN("NAME")
	LANE_C_POSITION = LANE.COLUMN("POSITION")
	LANE_C_BOARD_ID = LANE.COLUMN("BOARD").As("BoardId")
	//FK's
	LANE_A_BOARD = LANE.
				ASSOCIATE(LANE_C_BOARD_ID).TO(BOARD_C_ID).
				As("Board")
	LANE_A_TASKS = LANE.
				ASSOCIATE(LANE_C_ID).TO(TASK_C_LANE_ID).
				As("Tasks")
	LANE_A_NOTIFICATIONS = LANE.
				ASSOCIATE(LANE_C_ID).TO(NOTIFICATION_C_LANE_ID).
				As("Notifications")
	LANE_A_USER_CREATION = LANE.ASSOCIATE(LANE_C_USER_CREATION).TO(USER_C_ID).As("UserCreation")
	LANE_A_USER_MODIFICATION = LANE.ASSOCIATE(LANE_C_USER_MODIFICATION).TO(USER_C_ID).As("UserModification")
)

func init() {
	LANE.PreInsertTrigger = func(ins *db.Insert) {
		ins.Set(LANE_C_VERSION, 1)
		ins.Set(LANE_C_CREATION, NOW())
		uid, ok := ins.GetDb().GetAttribute(entity.ATTR_USERID)
		if ok {
			ins.Set(LANE_C_USER_CREATION, uid.(int64))
		}
	}
	LANE.PreUpdateTrigger = func(upd *db.Update) {
		upd.Set(LANE_C_MODIFICATION, NOW())
		uid, ok := upd.GetDb().GetAttribute(entity.ATTR_USERID)
		if ok {
			upd.Set(LANE_C_USER_MODIFICATION, uid.(int64))
		}
	}
}
