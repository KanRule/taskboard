/**
 * Warning: Generated code! do not change!
 * Generated by: go/EntityDB.ftl
 */
package tables
import (
	"github.com/quintans/goSQL/db"
	"github.com/quintans/taskboard/common/entity"
	. "github.com/quintans/toolkit/ext"
)

var (
	USER = db.TABLE("USER")
	USER_C_ID = USER.KEY("ID")
	USER_C_VERSION = USER.VERSION("VERSION")
	// Audit
	USER_C_CREATION = USER.COLUMN("CREATION")
	USER_C_MODIFICATION = USER.COLUMN("MODIFICATION")
	USER_C_USER_CREATION = USER.COLUMN("USER_CREATION").As("UserCreationId")
	USER_C_USER_MODIFICATION = USER.COLUMN("USER_MODIFICATION").As("UserModificationId")
	// Atributos 
	USER_C_NAME = USER.COLUMN("NAME")
	USER_C_USERNAME = USER.COLUMN("USERNAME")
	USER_C_PASSWORD = USER.COLUMN("PASSWORD")
	USER_C_DEAD = USER.COLUMN("DEAD")
	//FK's
    // many to many
    USER_A_BOARDS = db.NewM2MAssociation(
        "boards", 
        db.ASSOCIATE(USER_C_ID).WITH(BOARD_USER_C_USERS_ID),
        db.ASSOCIATE(BOARD_USER_C_BOARDS_ID).WITH(USER_C_ID),
    )
		
	USER_A_ROLES = USER.
				ASSOCIATE(USER_C_ID).TO(ROLE_C_USER_ID).
				As("Roles")
	USER_A_USER_CREATION = USER.ASSOCIATE(USER_C_USER_CREATION).TO(USER_C_ID).As("UserCreation")
	USER_A_USER_MODIFICATION = USER.ASSOCIATE(USER_C_USER_MODIFICATION).TO(USER_C_ID).As("UserModification")
)

func init() {
	USER.PreInsertTrigger = func(ins *db.Insert) {
		ins.Set(USER_C_VERSION, 1)
		ins.Set(USER_C_CREATION, NOW())
		uid, ok := ins.GetDb().GetAttribute(entity.ATTR_USERID)
		if ok {
			ins.Set(USER_C_USER_CREATION, uid.(int64))
		}
	}
	USER.PreUpdateTrigger = func(upd *db.Update) {
		upd.Set(USER_C_MODIFICATION, NOW())
		uid, ok := upd.GetDb().GetAttribute(entity.ATTR_USERID)
		if ok {
			upd.Set(USER_C_USER_MODIFICATION, uid.(int64))
		}
	}
}
