/**
 * WARNING: Generated code! do not change!
 * Generated by: go/IService.ftl
 */
package service;

import (
	"github.com/quintans/taskboard/common/entity"
	"github.com/quintans/taskboard/common/dto"
	"github.com/quintans/toolkit/web"
	"github.com/quintans/toolkit/web/app"
)

type ITaskBoardService interface {
	
	// param criteria	
	// return
	FetchBoards(ctx web.IContext, criteria dto.BoardSearchDTO) (app.Page, error)
	
	// param id	
	// return
	FetchBoardById(ctx web.IContext, id int64) (*entity.Board, error)
	
	// param id	
	// return
	FullyLoadBoardById(ctx web.IContext, id int64) (*entity.Board, error)
	
	// param board	
	// return
	SaveBoard(ctx web.IContext, board *entity.Board) (*entity.Board, error)
	
	// param id	
	// return
	DeleteBoard(ctx web.IContext, id int64) error
	
	// param boardId	
	// return
	AddLane(ctx web.IContext, boardId int64) error
	
	// param lane	
	// return
	SaveLane(ctx web.IContext, lane *entity.Lane) (*entity.Lane, error)
	
	// param boardId	
	// return
	DeleteLastLane(ctx web.IContext, boardId int64) error
	
	// param task	
	// return
	SaveTask(ctx web.IContext, task *entity.Task) (*entity.Task, error)
	
	// param taskId	
	// param laneId	
	// param position	position = -1 is to eliminate
	// return
	MoveTask(ctx web.IContext, input MoveTaskIn) error
	
	// param criteria	
	// return
	FetchNotifications(ctx web.IContext, criteria dto.NotificationSearchDTO) (app.Page, error)
	
	// if it returns null, it means the notification was not saved due a matching one
	//
	// param notification	
	// return
	SaveNotification(ctx web.IContext, notification *entity.Notification) (*entity.Notification, error)
	
	// param id	
	// return
	DeleteNotification(ctx web.IContext, id int64) error
}
