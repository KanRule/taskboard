/**
 * Warning: Generated code! do not change!
 * Generated by: go/LOV.ftl
 */
package lov;

import (
	"database/sql"
	"database/sql/driver"
)

type ERole string

const (
	ERole_ADMIN ERole = "ADMIN"
	ERole_USER ERole = "USER"
)    

var ERoles = [...]ERole{ERole_ADMIN, ERole_USER}

func (this ERole) Parse(value string) (ERole, bool) {
    for _, element := range ERoles {
		v, _ := element.Value()
		if v == value {
			return element, true
		}
    }
    
    return ERole(""), false
}

func (this *ERole) Scan(value interface{}) error {
	var x sql.NullString
	err := x.Scan(value)
	if !x.Valid || err != nil {
		return err
	}

	*this = ERole(x.String)
	return nil
}

// Value implements the driver Valuer interface.
func (this ERole) Value() (driver.Value, error) {
	return string(this), nil
}
